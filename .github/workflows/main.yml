# This file is part of Phalcon.
#
# (c) Phalcon Team <team@phalcon.io>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: Phalcon CI

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 02:00 runs only on default branch
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
  pull_request:
  workflow_dispatch:

env:
  # All versions should be declared here
  PHALCON_VERSION: 5.0.2

  # For tests
  LANG: en_US.UTF-8
  LANGUAGE: en_US.UTF-8
  LC_ALL: en_US.UTF-8

  # PHP extensions required by Composer
  # (adding phalcon version here until I figure out how to use the variable above)
  EXTENSIONS: apcu, gettext, gd, igbinary, imagick, intl, json, mbstring, msgpack, memcached, phalcon-5.0.2, sqlite3, yaml, redis, :memcache

jobs:
  phpcs:
    name: Validate Tests code style
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Run PHP_CodeSniffer
        run: docker run --rm -v $(pwd):/data cytopia/phpcs --standard=./phpcs.xml

  build-and-test:
    name: tests / PHP-${{ matrix.php }}

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0', '8.1' ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup platform specific environment
        shell: pwsh
        run: |
          git config --global core.autocrlf false
          $SessionSavePath = '/tmp' 
          Write-Output "SESSION_SAVE_PATH=$SessionSavePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.EXTENSIONS }}
          ini-values: apc.enable_cli=on, session.save_path=${{ env.SESSION_SAVE_PATH }}
          tools: pecl, phpize, php-config, composer:v2
          coverage: xdebug
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate composer
        run: composer validate --no-check-all --no-check-publish

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}-

      - run: composer install --prefer-dist

      - name: Setup Tests
        shell: bash
        run: |
          vendor/bin/codecept build

      - name: Run Unit Tests
        if: always()
        run: vendor/bin/codecept run --coverage-xml=coverage-${{ matrix.php }}.xml --ext DotReporter unit

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          directory: ./tests/_output/
          files: coverage-7.4.xml,coverage-8.0.xml,coverage-8.1.xml
